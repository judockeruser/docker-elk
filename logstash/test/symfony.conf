input {
  file {
    type => "symfony_dev"
    path => "/var/www/symfony/var/logs/dev.log"
    start_position => beginning
    sincedb_path => "/dev/null"
  }
  file {
    type => "symfony_prod"
    path => "/var/www/symfony/var/logs/prod.log"
    start_position => beginning
    sincedb_path => "/dev/null"
  }
}

filter {
  if [type] in ["symfony_dev", "symfony_prod"] {
    grok {
      #patterns_dir => "./patterns"
      patterns_dir => "/opt/logstash/patterns"
      match => { "message" => "%{SYMFONY}"}
    }
    date {
        locale => "en"
        match => ["date", "YYYY-MM-dd HH:mm:ss"]
        timezone => "Europe/Stockholm"
        target => "@timestamp"
        add_field => { "debug" => "timestampMatched"}
    }
  }
}

output {
  stdout { codec => rubydebug }
}